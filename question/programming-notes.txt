information/data
storage memory
transport communication

Data & Functions
numbers
words
booleans


Simple to Complex Data
Booleans 2 possibilitieys
Numbers depending on base 
Strings 26 base more than decimal

data as ingredients, matter, clay
programming as recipe, form, sculpt


data as nouns
operators/functions as verbs
verbs transorm possible states of data


Expressions <-> Phrase
Statements <-> Sentence
Function is potential
Persistent state with bindings
empty dynamic or static


Using De morgans laws and logic with javascript
using in every some none, quantifiers
different combinations of not and is


Use Summaries of eloquent javascript


The Journey of a Webpage
From start to Finish
Pipeline web research design develop deploy use
Pipeine
Developer Design
Developer Build
developement enviroment
browser


Main Enviroments
Browser
Node Js


Enviroments constructs the code.
language instructs
enviroments constructs


Javascript Cheatsheet
Beginner
Advanced
Expert

---

let var const and object properties
all variables


For turn based games
time, space, skills
how fine grained these are, and having parallel and simulataneous movements.


Trial by Fire
function for testing as false, 
can use recursive function in the condition 
Trial by Water
same but testing as true


Groups use objects space arrays time sequence
Const and object freeze permanence and impermanence mutability immutability transformable
Programmers palette simple to compound
Object hierarchy vertical, function sequence horizontal

True
yes


False
no

Empty
silence
null and undefined

Nonsense
?$#%^
unknown
NaN


In devsand have javascript syntax divided by category 
such as operator type
Make Devsand buttons Mdn JavaScript reference
Buttons on hover show code and console output, examples to show mechanics, 
include JavaScript questions, temporal dead zone, maybe even engine execution


Resolution, granularity, range of possibilities space, probability, potential of tool and how to extract state
Atomic strings and integers and then then groups of those as abstractions objects arrays lists
Game where characters are weapons
Logical operators <> mean exclusive and along with = means inclusive.
Conditional turn based game, possibly space

Code Fission or Meosis
When a function becomes too large, the critical at which to split that function into another. Similar to an amoeba splitting. cell phases
The resolution of that critical point will define how often the code is split or fission occurs.
Structural patterns


code collapse


https://en.wikipedia.org/wiki/Cell_division





Formal sciences
Philosophy Systems science
mathematics Logic
computer science algorithms linux
programming C JavaScript python clojure rust go haskell
Code scaling analogy nouns and verbs to sentences to paragraphs to chapters to book
Variables encapulsate more abstract sentences
Documenting ideas


Why sum of integers is divisible by 3 also whole numbers is, underlying
Seed rings for shape points
Visualizing math shape relationships to numbers
Notating numbers in space, different configurations mean different solutions, different dimensions to solve problem
Numbers represent only surface always a complementary seed list


conditions or states
how fine grained or how much resolution is applied to the transformation of states.
possible states or possibility space/permutations and their ranges
x ==1 //only one state
x < 23 && x > -2 //range of states
this only works for numbers
if range of strings or other values use a list
arr = [23, “d”, “on”, true]
arr.includes(23) || arr.includes(“b”) || arr.includes(“d”)
> and < operators are similar to includes()


global states on the far end you have only one state that is being updated throughout the program. Gunk goo Glob Blob Wad of Slime, this style is difficult to debug.
On the the other end you have Dust, Sand where every possible update is put into a variable representing that particular state.


programming languages as martial art and/or combat


---


i spy book 
javascript
programming edition

I spy...
6 misplaced semicolons
3 undefined variables
4 instances of legacy code
2 deprecated libraries

---















